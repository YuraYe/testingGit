const VERSION = "v 0.5.1 beta"
// –ü–æ–ª—É—á–∞–µ–º HTML —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –ø–µ—Ä–µ–º–µ–Ω—ã—ã–µ (jQuery)
let speedText = $('#speed-text');
let speedSlider = $('#speed-range');

$('.version').text(VERSION);

//////////////////////////////////////////////////

let USER = TryToLoad('currentUser');

function ReadData() {
   let userIndex = 0;
   console.log(USER);
   // –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –ø–∞–º—è—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
   $('#username-field').text(USER.username);
   $('#best-score-field').text(USER.bestScore);
   $('#playedGames-field').text(USER.playedGames);
   speedText.text(SpeedConvert(USER.lastSpeed));
   speedSlider.val(+USER.lastSpeed);

   console.log(USER.username + ' sign in!');
}


function SpeedSave(speedValue) {  // "-1"
   USER.lastSpeed = speedValue;
   localStorage.setItem('currentUser', JSON.stringify(USER));

   // –ü–æ–ª—É—á–∞–µ–º –∏–∑ –ø–∞–º—è—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ø–∞—Ä—Å–∏–º –∏—Ö
   let usersData = JSON.parse(localStorage.getItem('usersData'));
   usersData[USER.id].lastSpeed = speedValue;
   SaveUserData(usersData[USER.id]);
}


function Lose(killer = 'anonim') {
   //clearInterval(GAME); // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–≥—Ä—ã

   setInterval(function() { // –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è
      $('#canvas-alert').html("You lose...</br></br>üòø");
      $('.pause-panel').removeClass('hidden');
      IsLose = true;
   }, delay);

   // –ü—Ä–æ—Ä–µ—Ä–∫–∞ –Ω–∞ –¥—ç–±–∏–ª–∞ ))))))
   if (score > 0) {
      // –ï—Å–ª–∏ –ø—Ä–æ—à–µ–ª —Ç–µ—Å—Ç - +1 –∫ —Å—ã–≥—Ä–∞–Ω—ã–º –∏–≥—Ä–∞–º
      USER.playedGames += 1;

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–∫–æ—Ä–¥
      if (score > USER.bestScore) {
         // –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ —Ä–µ–∫–æ—Ä–¥–∞
         USER.bestScore = score;
         // –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ –Ω–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥
         alert(`Your new best score is ${score}!\n Congratulations!!!  üéâüéâüéâüéâüéâüéâüéâ`)
      }
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–∞–º—è—Ç—å
      SaveUserData(USER);
   }
   console.log('Cause of death - ' + killer)
}


// –û—Ç–ª–æ–≤ –æ—à–∏–±–æ–∫ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ, –≤ —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –æ–±—ä–µ–∫—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function TryToLoad(dataKey = 'currentUser') {
   let newUser = {};
   try {
      newUser = JSON.parse(localStorage.getItem(dataKey));
   } catch (err) {
      newUser = {
         username: "Player",
         id: 0,
         bestScore: 0,
         playedGames: 0,
         lastSpeed: 0
      };
      console.warn('Loading user data error!\n' + err);
   }
   return newUser;
}


function SaveUserData(thisUser) {
   try {
      // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      let allUsers = JSON.parse(localStorage.getItem('usersData'));
      allUsers[thisUser.id] = thisUser;

      localStorage.setItem('usersData', JSON.stringify(allUsers));
      localStorage.setItem('currentUser', JSON.stringify(thisUser));

      console.log('Your data was saved!');
   } catch (e) {
      // –û—Ç–ª–æ–≤ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –∏ –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
      console.error('Your data was NOT saved! With error:\n' + e);
   }
}
